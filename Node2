char ssid[] = "Tahir"; //  Change this to your network SSID (name).
char pass[] = "tahir1122";    // Change this your network password

//------ MQTT broker settings and topics
const char* mqtt_server = "mqtt3.thingspeak.com";


//-- published settings
const char* publishTopic ="channels/2379082/publish";   //REPLACE THE NUMBER 114938 WITH YOUR channel ID  
//const char* publishTopic2 ="channels/2267970/publish";   //REPLACE THE NUMBER 114938 WITH YOUR channel ID   114938 WITH YOUR channel ID  

const unsigned long postingInterval = 600L * 1000L; // Post data every 10 minutes.



#include <WiFi.h>   
#include <PubSubClient.h>
#include <WiFiClient.h>

#include "DHT.h"
#define DHTPIN 23     
#define DHTTYPE DHT11 
DHT dht(DHTPIN, DHTTYPE);  // Create the DHT object.

WiFiClient espClient;
PubSubClient client(espClient);  // Download the library PubSubClient from the arduino library manager

unsigned long lastUploadedTime = 0;

void setup_wifi() {
  delay(10);
  Serial.print("\nConnecting to ");
  Serial.println(ssid);

 WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, pass);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  randomSeed(micros());
  Serial.println("\nWiFi connected\nIP address: ");
  Serial.println(WiFi.localIP());
}

//=====================================
void reconnect() {
  // Loop until we're reconnected
  while (!client.connected()) {
    Serial.print("Attempting MQTT connection...");
      //client.connect("cliend ID", "username","password") Replace with your Thingspeak MQTT Device Credentials
    if (client.connect("PRcDBh4DIxAVNzU3IwMXLQY", "PRcDBh4DIxAVNzU3IwMXLQY","uxyy3gubrTuwbfyphHFj+NVh")) {  
      Serial.println("connected");
     
    } else {
      Serial.print("failed, rc=");
      Serial.print(client.state());
      Serial.println(" try again in 5 seconds");   // Wait 5 seconds before retrying
      delay(5000);
    }
  }

}


//========================================= setup
//=========================================

void setup() {

  Serial.begin(9600);
  dht.begin();
  while (!Serial) delay(1);
  setup_wifi();
  client.setServer(mqtt_server, 1883);
}

void publishMessage(const char* topic, String payload , boolean retained){
  if (client.publish(topic, payload.c_str()))
      Serial.println("Message published ["+String(topic)+"]: "+payload);
}
//========================================= loop
//=========================================
void loop() {

  delay(2000);
//
//  // Reading temperature or humidity takes about 250 milliseconds!
//  // Sensor readings may also be up to 2 seconds 'old' (its a very slow sensor)
float h = dht.readHumidity();
//  //Read temperature as Celsius (the default)
 float t = dht.readTemperature();
//
if (isnan(h) || isnan(t) ) {
 Serial.println("Failed to read from DHT sensor!");
  return;
 }

Serial.print("Humidity: ");
Serial.print(h);
Serial.println("%");
Serial.print("Temperature: ");
Serial.print(t);
Serial.println("Â°C ");
delay(1000);

 
  if (!client.connected()) reconnect();
  client.loop();
    
  
  if (millis() - lastUploadedTime > postingInterval) { // The uploading interval must be > 15 seconds 
   
  double sensorValue_11 = t; // replace with your sensor value
  double sensorValue_12 = h; // replace with your sensor value



    String dataText = String("field4=" + String(sensorValue_11) + "&field5=" + String(sensorValue_12) + "&status=MQTTPUBLISH");
    publishMessage(publishTopic,dataText,true);    
    lastUploadedTime = millis();


  }
  
 }
